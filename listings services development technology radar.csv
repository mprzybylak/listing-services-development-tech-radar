name,ring,quadrant,isNew,description,
Kafka Streams,adopt,language-and-frameworks,TRUE,"Kafka streams is a library that allows you to manipulate data from multiple kafka topics in easy way. It provides you wide range of operation for transforming filtering and aggregating streams. At the same time it provides you seemles scalability and persistance (automatically create ""technical"" topic that stores results of aggregations - so even if one instance of kafka stream app will die - other one can continue processing) (Suggested by Michal)",
Python for Data Science & Devops,adopt,language-and-frameworks,TRUE,One of the most common and easy to use langauge for data science so it has lots of data science libraries that we can make use of. It can also be used for DevOps as a scripting language. (Suggested by Emily),
Scala,adopt,language-and-frameworks,TRUE,TBD (Suggested by Chris),
Play Framework,adopt,language-and-frameworks,TRUE,TBD (Suggested by Chris),
pandas,trial,language-and-frameworks,TRUE, arguably most common and most feature-packed python library for data science. It completes other two Data Science blips (“Jupyter” “Puthon for datascience”) (Suggested by Michal),
Cats,trial,language-and-frameworks,TRUE,A pure functional programming library for Scala. Some time use it and love it other teams don't use it. It alows to avoid repetetive code and allows for better control of side effects. (Suggested by Chris),
Go ,assess,language-and-frameworks,TRUE,Go is cross system langugae that will work in any environment where go runtime exists or even compile to native binaries. Go is widely used language in DevOps environement. It contains broad range of tools on various levels of abstraction (from low level pointers to high level coroutines). Since language is statically check it might be considered more safe than static languges. (Suggested by Domenico),
Kotlin,assess,language-and-frameworks,TRUE,Kotlin is a statically typed general purpose programming language that runs on top of JVM.Like Scala it supports functional programming style extension methods lambdas case classes and adds the concept of coroutines which intention is to make multithreaded programming easier. What does it bring to the table? Besides reusing all existing Scout infrastructure Kotlin might be a smoother transition for developers coming from Java. That comes not only from a readability standpoint (which we understand is subjective) but also from the fact that it smoothly integrates with Spring widely used by the Java community among many other frameworks.In LSD we've run an experiment in which we've created a script for deduplicating listing images using Kotlin + Spring Boot and it's successfully been used on a daily basis for the last 2 months. For its readability and easy integration with the Java environment I believe Kotlin is a good candidate for the assess quadrant of AS24 Tech Radar. (Suggested by Felipe),
Clojure,hold,language-and-frameworks,TRUE,A functional dynamic jvm language. While it could be used for solve problems we don't want to use it because we don't want to introduce another programming language to Scout (Suggested by Chris),
C#,hold,language-and-frameworks,TRUE,TBD (Suggested by Chris),
Infinity,adopt,platforms,TRUE,Infinity is a platform that allows you quickly to bootstrap your application on AWS without beeing woried of management of EC2 instances. It also provides you out of the box tools like kibana log cluster as such identiy seems to be first choice for new services (Suggested by Michal),
Data lake,adopt,platforms,TRUE,TBD (Suggested by Diego),
AWS Lambda,adopt,platforms,TRUE,TBD (Suggested by Chris),
Docker,adopt,platforms,TRUE,TBD (Suggested by Chris),
AWS,adopt,platforms,TRUE,TBD (Suggested by Diego),
.net Core,assess,platforms,TRUE,We already have lot's of knowledge about csharp in company. Since we are migrating from data center to AWS we can leverage fact that .net core is cross platform which should make migration easier. (Suggested by Jordi),
Oracle as a platform,hold,platforms,TRUE,a DBMS curently used as de facto platform by cash stack application. While technology itself is fine our use of it as a way to share data between applications has caused many problems. (Suggested by Chris),
Consumer Driven Contracts,adopt,techniques,TRUE,TBD (Suggested by Diego),
Testing in production,adopt,techniques,TRUE,TBD (Suggested by Diego),
Functional tests,adopt,techniques,TRUE,TBD (Suggested by Diego),
Monitoring as a code,adopt,techniques,TRUE,Using code to build dashboards (especially datadog ones) because of testability reusability versioning (Suggested by Emily),
Continous deployment,adopt,techniques,TRUE,It is a good habit to have CD. Enables us to have fast feedback so we can see if something went wrong in production in easy way. Because of that we can react quickly. Also because process is automated - we are decreasing possibility of having human error based incidents and we speed up process because removing repetative tasks. (Suggested by Domenico),
Pair programming,adopt,techniques,TRUE,Two programmers working on the same code at the same time to achieve knolwedge transfer and shared ownership of code. In Scout it is practiced both remote and in person - and also both full time and part time. (Suggested by Chris),
Customer first mindset,adopt,techniques,TRUE,Know who our customers are and consider potential impact in everything that we do. (Suggested by Sam),
Data driven decisions,adopt,techniques,TRUE,although we are experimenting and collecting data we understand that we need to get even better at enabling experimentation across services and improve our skills at hypothesis-driven development. (Suggested by Sam),
TDD,adopt,techniques,TRUE,TBD (Suggested by Diego),
Structured logs,adopt,techniques,TRUE,TBD (Suggested by Diego),
Innovation accounting,assess,techniques,TRUE,Measuring the impact in either metric or learning. This technique is used on lower level than feature (eg. on level of user story). That technique allow us to see if we are deliverying value and to understand customer better over time. (Suggested by Sam),
Alerts first,assess,techniques,TRUE,even if having operational dashboard in visible place and taking proactive approach to check them - it is seen that having alerting as a main “call for action” for various range of problems allows team to be split attention between maintenance and development. Having proper alerting setup allows team also to see metrics in tools like OpsGenie that allows to tweak alerts/ alert reaction process (Suggested by Michal),
Domain probe,trial,techniques,TRUE,as described here https://martinfowler.com/articles/domain-oriented-observability.html domain probe is a design pattern that allows to decouple all instrumentation related (logs metrics traces etc.) details from business logic. It makes codes more clear and unit testing more focused (domain classes not focusing on testing telemetry telemetry tests can be more exhaustive) (Suggested by Michal),
Lightweight Architecture Decision Recording,trial,techniques,TRUE,technique where important architecture decision are written down and tracked for future reference which allows team to recall why some decision were made. The most famous style of LADR is the one proposed by M. Nygard but it is more about concept of tracking than about any particular implementation (Suggested by Michal),
Testing against production dependencies,trial,techniques,TRUE,TBD (Suggested by Diego),
Threat modeling,trial,techniques,TRUE,Analysis technique where team is colanorating to identify security threats for the systems. It is well established security practice in industry that was not yet widely used in Scout (Suggested by Chris),
Data lake by default,trial,techniques,TRUE,Consider data lake requirements as part of every feature. Avoid using other tools for gathering data and pump your data based on use cases instead of pumping everything to avoid data swamp anti-pattern (Suggested by Sam),
Remote window,trial,techniques,TRUE,"Remote window is a technique when people from one team working in differnt location join into single video call (either each person on her/his laptop or on common team trolley)That approach allow to bridge the gap between remote peers allowing people to feel ""closer"" to each other. It also allows you quickly to ""broadcast"" question to rest of the team or just simply - see who right now is sitting at the desk and who is AFK (Suggested by Michal)",
"""Selfish"" tooling",hold,techniques,TRUE,It is very offten to see a situation when each engineer in the team is using different tool (eg. atom vs visual studio code vs sublime vs vim) or using the same tool but with totally differnt configuration (eg Visual Studio with or without resharper have different features and shortcuts). Is obviously fine to use whatever tool is more convinient for dev - but when it comes to pair programming - such situation is making pair slower because always one of the developer will need to deal with unfamiliar setupAltearnative solution might be to still allow devs to use whatever tool they one when they are solo but have some kind of standarized set of tools for pairing (Suggested by Michal),
Splunk for Dashboards,hold,techniques,TRUE,Splunk is a powerfull tool for data analysis. In our team we are using it mostly for logs investigation and building operational dashboards. The main disadventage of using splunk for dashboards is its speed. It is not uncommon to wait over 10 minutes for dashboard to build. It is very long taking into condiseration that operational dashboard should be one of the first tools that help you to investigate impact/root cause of problems. Because of that one wants have possibility to quickly changing timeframes filter out and zoom into selected metrics quickly. Splunk is not giving you enough performance for that (Suggested by Michal),
“Stacked” deployment,hold,techniques,TRUE,situation where delivery step of deployment pipeline is mannual and development team is not doing deployments on regular basis. Result of that is growing over time “stack” of commits - and each new one is making deployment more risky. (Suggested by Michal),
Jupyter,adopt,tools,TRUE,Autoscout is moving towards being data driven and Jupyter is easy to use tool to process data. (Suggested by Emily),
Virtual whiteboard tool,adopt,tools,TRUE,(Like Miro) Having a tool like a virtual witheboard help colaboration of distributed teams. (Suggested by Sam),
Kibana,adopt,tools,TRUE,Kibana presents logs in more structured way. Which makes it easier to search by given fields. (Suggested by Jordi),
Datadog,adopt,tools,TRUE,It is a great tool to build metric dashboards. It is fast to look through gathered data. (Suggested by Jordi),
Elastic Search,adopt,tools,TRUE,TBD (Suggested by Chris),
Terraform,assess,tools,TRUE,Easy to learn. Could be a great replacement for CloudFormation that we can see some teams are struggling to use. (Suggested by Jordi),
as24-project-template,assess,tools,TRUE,as24 project template were desgined to substitute old tatsu service template. Even if this tool is fairly new it looks like there will be big effort applyied to convince teams to use it. Because of that it would be resonable to test it first (Suggested by Michal),
C4 Diagrams,trial,tools,TRUE,"C4 diagrams were introduced by Simon Brown in order as a result of his observation about repetative antipatterns in software architecture diagrams. Brown provided model where each of the diagrams has very strict definition of content and also introduced notation that is both strict and self explonatory. Because of that one who will learn how C4 diagrams looks like will have ability to read other C4 diagrams without a need of explanation - which is not a case for ""usntructured"" types of architecture diagrams (Suggested by Michal)",
Sonar Qube,trial,tools,TRUE,Adding Sonar Qube into pipeline we are enabling possibility of analysing code. It gives us confidence that our coding practices are right. Tools like static code analysis looking for credentials inside of the code scanning dependencies allows us to us to push higher quality code into production since Sonar Qube can block the build on problems. It is also highlt customisable - so we can tailor rules to fit team context. (Suggested by Domenico),
Pact,hold,tools,TRUE,TBD (Suggested by Diego),
Splunk,hold,tools,TRUE,Holds unstructured data which makes it diffcult to create dashboards on top of them. Also Splunk is a slow tool. SRE team is also not supporting it right now. (Suggested by Jordi),
